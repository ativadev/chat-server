<style>

body {
	padding-bottom: 3rem;
}

.info {
	font-weight: bold;
}

#form {
	background: var(--secondary-color-dark);
	padding: 0.25rem;
	position: fixed;
	bottom: 0;
	left: 0;
	right: 0;
	display: flex;
	height: 3rem;
	box-sizing:
	border-box;
	backdrop-filter: blur(10px);
}

#input {
	border: none;
	padding: 0 1rem;
	flex-grow: 1;
	border-radius: 2rem;
	margin: 0.25rem;
}

#input:focus {
	outline: none;
}

#form > button {
	background: var(--primary-color);
	border: none;
	padding: 0 1rem;
	margin: 0.25rem;
	border-radius: 3px;
	outline: none;
	color: var(--on-dark);
}

#messages {
	font-family: monospace;
	list-style-type: none;
	margin: 0;
	padding: 0;
}

#messages > li {
	padding: 0.5rem 1rem;
}

/* #messages > li::before {
	content: "\00BB";
} */

.dark {
	background: rgba(0,0,0,0.25);
	/* color: var(--on-dark); */
}

</style>
<ul id="messages"></ul>
<form id="form" action="">
	<input id="input" autocomplete="off">
	<button class="">Send</button>
</form>

<script src="/socket.io/socket.io.js"></script>
<script>
let username
while(!username){
	username = prompt('Seu nome:')
}

const socket = io();

const messages = document.getElementById('messages');
const form = document.getElementById('form');
const input = document.getElementById('input');

const createEntry = (container, content, decorator=false, className=null) => {
	const msg = JSON.parse(content);
	const item = document.createElement('li');
	let text = ''

	if(decorator) {
		text = `${msg.user} [${new Date().toLocaleTimeString()}] >> ${msg.data}`
	} else {
		text = msg.data
	}

	if(className){
		item.classList.add(className)
	}

	item.textContent = text;
	container.appendChild(item);
	window.scrollTo(0, document.body.scrollHeight);
}

window.onload = () => {
	createEntry(messages,
		JSON.stringify({
			user: null,
			data: `Bem vind@ Ã  sala, ${username}!`}),
		false,
		'info');
}

form.addEventListener('submit', (e) => {
	e.preventDefault();
	if (input.value) {
		const msg = JSON.stringify({
			user: username,
			data: input.value
		});
		console.log(msg)
		socket.emit('chat message', msg);
		createEntry(messages, msg, true);
		input.value = '';
	}
});

socket.on('chat message', (msg) => {
	const item = document.createElement('li');
	createEntry(messages, msg, true, 'dark');
});

socket.on('joined', (msg) => {
	const item = document.createElement('li');
	createEntry(messages, msg, false, 'info');
})

socket.on('left', (msg) => {
	createEntry(messages, msg, false, 'info');
})

</script>
